.MODEL SMALL

.STACK 100H

.DATA

	CR EQU 0DH
	LF EQU 0AH

.CODE


PRINTLN PROC

;PRINTS THE NUMBER STORED IN AX
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	CMP AX,0
	JGE HERE
;NEGATIVE NUMBER
	PUSH AX
	MOV AH, 2
	MOV DL, '-'
	INT 21H
	POP AX
	NEG AX
HERE:
	XOR CX,CX
	MOV BX , 10
LOOP_:
	CMP AX,0
	JE END_LOOP
	XOR DX,DX
	DIV BX
	PUSH DX
	INC CX
	JMP LOOP_
END_LOOP:
	CMP CX,0
	JNE PRINTER
	MOV AH,2
	MOV DL,'0'
	INT 21H
	JMP ENDER
PRINTER:
	MOV AH,2
	POP DX
	OR DL,30H
	INT 21H
	LOOP PRINTER
ENDER:
;PRINT NEW LINE
	MOV AH, 2
	MOV DL , LF
	INT 21H
	MOV DL , CR
	INT 21H
	POP DX
	POP CX
	POP BX
	POP AX
	RET
PRINTLN ENDP

MAIN PROC

	MOV AX, @DATA
	MOV DS, AX
	PUSH 0
	PUSH 0
	PUSH 0
	PUSH 0
	PUSH 0
	MOV BP,SP
	MOV AX , [BP+0]
	POP DX
	MOV BP,SP
	MOV [BP+4] , AX
	PUSH 1
	MOV BP,SP
	MOV AX , [BP+0]
	POP DX
	MOV BP,SP
	MOV [BP+2] , AX
;code for (i=0; i<4; i++)
	PUSH 0
	MOV BP,SP
	MOV AX , [BP+0]
	POP DX
	MOV BP,SP
	MOV [BP+0] , AX
LABEL4:
	PUSH 4
; doing relop operation i<4
	MOV BP,SP
	MOV AX, [BP+2]
	CMP AX , [BP+0]
	JL LABEL0
	MOV BX,0
	JMP LABEL1


LABEL0:
	MOV BX,1


LABEL1:
	POP DX
	PUSH BX
	MOV BP,SP
	MOV AX , [BP+0]
	CMP AX , 0
	JE LABEL5
	PUSH 0
	PUSH 3
	MOV BP,SP
	MOV AX , [BP+0]
	POP DX
	MOV BP,SP
	MOV [BP+10] , AX
;code while (a--)
LABEL2:
;Incrementing varibale a, -1
	MOV BP,SP
	MOV AX,[BP+10]
	PUSH AX
	ADD AX,-1
	MOV [BP+10] , AX
	MOV BP,SP
	MOV AX , [BP+0]
	CMP AX , 0
	JE LABEL3
;Incrementing varibale b, 1
	MOV BP,SP
	MOV AX,[BP+10]
	PUSH AX
	ADD AX,1
	MOV [BP+10] , AX
	POP DX
	POP DX
	JMP LABEL2
LABEL3:
	POP DX
	POP DX
;Incrementing varibale i, 1
	MOV BP,SP
	MOV AX,[BP+2]
	PUSH AX
	ADD AX,1
	MOV [BP+2] , AX
	POP DX
	POP DX
	JMP LABEL4
LABEL5:
	POP DX
;printing a
	MOV BP,SP
	MOV AX, [BP+ 6]
	CALL PRINTLN
;printing b
	MOV BP,SP
	MOV AX, [BP+ 4]
	CALL PRINTLN
;printing c
	MOV BP,SP
	MOV AX, [BP+ 2]
	CALL PRINTLN

;DOS EXIT
	MOV AH, 4CH
	INT 21H
MAIN ENDP
END MAIN

