Line no 1: TOKEN <INT> Lexeme int found
Line no 1: TOKEN <ID> Lexeme main found
ScopeTable # 1
1 --> < main : ID >


Line no 1: TOKEN <LPAREN> Lexeme ( found
Line no 1: TOKEN <RPAREN> Lexeme ) found
Line no 1: TOKEN <LCURL> Lexeme { found
Line no 3: TOKEN <CHAR> Lexeme char found
Line no 3: TOKEN <ID> Lexeme str1 found
ScopeTable # 1.1
2 --> < str1 : ID >

ScopeTable # 1
1 --> < main : ID >


Line no 3: TOKEN <LTHIRD> Lexeme [ found
Line no 3: TOKEN <CONST_INT> Lexeme 100 found
ScopeTable # 1.1
2 --> < str1 : ID >
5 --> < 100 : CONST_INT >

ScopeTable # 1
1 --> < main : ID >


Line no 3: TOKEN <RTHIRD> Lexeme ] found
Line no 3: TOKEN <ASSIGNOP> Lexeme = found
Line no 3: Token <STRING> Lexeme "I own a dog." found --> <STRING, "I own a dog.">
Line no 3: TOKEN <SEMICOLON> Lexeme ; found
Line no 4: TOKEN <CHAR> Lexeme char found
Line no 4: TOKEN <ID> Lexeme str2 found
ScopeTable # 1.1
2 --> < str1 : ID >
3 --> < str2 : ID >
5 --> < 100 : CONST_INT >

ScopeTable # 1
1 --> < main : ID >


Line no 4: TOKEN <LTHIRD> Lexeme [ found
Line no 4: TOKEN <CONST_INT> Lexeme 100 found
100 already exists in ScopeTable# 1.1
Line no 4: TOKEN <RTHIRD> Lexeme ] found
Line no 4: TOKEN <ASSIGNOP> Lexeme = found
Line no 4: Token <STRING> Lexeme "I own a dog.\
    His name is Jack." found --> <STRING, "I own a dog.    His name is Jack.">
Line no 5: TOKEN <SEMICOLON> Lexeme ; found
Line no 6: TOKEN <CHAR> Lexeme char found
Line no 6: TOKEN <ID> Lexeme str3 found
ScopeTable # 1.1
2 --> < str1 : ID >
3 --> < str2 : ID >
4 --> < str3 : ID >
5 --> < 100 : CONST_INT >

ScopeTable # 1
1 --> < main : ID >


Line no 6: TOKEN <LTHIRD> Lexeme [ found
Line no 6: TOKEN <CONST_INT> Lexeme 100 found
100 already exists in ScopeTable# 1.1
Line no 6: TOKEN <RTHIRD> Lexeme ] found
Line no 6: TOKEN <ASSIGNOP> Lexeme = found
Line no 6: Token <STRING> Lexeme "He said, \" I own a dog\"\
    so I asked, \"What is his name?\"" found --> <STRING, "He said, " I own a dog"    so I asked, "What is his name?"">
Line no 7: TOKEN <SEMICOLON> Lexeme ; found
Line no 9: Token <COMMENT> Lexeme //This is a single line comment. found
Line no 10: Token <COMMENT> Lexeme //This is also a\
    single line comment. found
Line no 12: Token <COMMENT> Lexeme //This is also a /*Multi-line just for\
    fun */ single line comment. found
Line no 14: Token <COMMENT> Lexeme //This is another single line comment\  found
Line no 15: TOKEN <CHAR> Lexeme char found
Line no 15: TOKEN <ID> Lexeme str4 found
ScopeTable # 1.1
2 --> < str1 : ID >
3 --> < str2 : ID >
4 --> < str3 : ID >
5 --> < 100 : CONST_INT > < str4 : ID >

ScopeTable # 1
1 --> < main : ID >


Line no 15: TOKEN <LTHIRD> Lexeme [ found
Line no 15: TOKEN <CONST_INT> Lexeme 100 found
100 already exists in ScopeTable# 1.1
Line no 15: TOKEN <RTHIRD> Lexeme ] found
Line no 15: TOKEN <ASSIGNOP> Lexeme = found
Line no 15: Token <STRING> Lexeme "But this line is valid." found --> <STRING, "But this line is valid.">
Line no 15: TOKEN <SEMICOLON> Lexeme ; found
Line no 16: Token <COMMENT> Lexeme //This is another /*Multi-line again\  found
Line no 17: TOKEN <CHAR> Lexeme char found
Line no 17: TOKEN <ID> Lexeme str5 found
ScopeTable # 1.1
2 --> < str1 : ID >
3 --> < str2 : ID >
4 --> < str3 : ID >
5 --> < 100 : CONST_INT > < str4 : ID >
6 --> < str5 : ID >

ScopeTable # 1
1 --> < main : ID >


Line no 17: TOKEN <LTHIRD> Lexeme [ found
Line no 17: TOKEN <CONST_INT> Lexeme 100 found
100 already exists in ScopeTable# 1.1
Line no 17: TOKEN <RTHIRD> Lexeme ] found
Line no 17: TOKEN <ASSIGNOP> Lexeme = found
Line no 17: Token <STRING> Lexeme "This line is also valid." found --> <STRING, "This line is also valid.">
Line no 17: TOKEN <SEMICOLON> Lexeme ; found
Line no 18: Token <COMMENT> Lexeme //Tony said, \"This is still easy.\" found
Line no 19: TOKEN <CHAR> Lexeme char found
Line no 19: TOKEN <ID> Lexeme str6 found
ScopeTable # 1.1
0 --> < str6 : ID >
2 --> < str1 : ID >
3 --> < str2 : ID >
4 --> < str3 : ID >
5 --> < 100 : CONST_INT > < str4 : ID >
6 --> < str5 : ID >

ScopeTable # 1
1 --> < main : ID >


Line no 19: TOKEN <LTHIRD> Lexeme [ found
Line no 19: TOKEN <CONST_INT> Lexeme 100 found
100 already exists in ScopeTable# 1.1
Line no 19: TOKEN <RTHIRD> Lexeme ] found
Line no 19: TOKEN <ASSIGNOP> Lexeme = found
Line no 19: Token <STRING> Lexeme "Really Tony?" found --> <STRING, "Really Tony?">
Line no 19: TOKEN <SEMICOLON> Lexeme ; found
Line no 22: TOKEN <RETURN> Lexeme return found
Line no 22: TOKEN <CONST_INT> Lexeme 0 found
ScopeTable # 1.1
0 --> < str6 : ID >
2 --> < str1 : ID >
3 --> < str2 : ID >
4 --> < str3 : ID >
5 --> < 100 : CONST_INT > < str4 : ID >
6 --> < str5 : ID > < 0 : CONST_INT >

ScopeTable # 1
1 --> < main : ID >


Line no 22: TOKEN <SEMICOLON> Lexeme ; found
Line no 25: TOKEN <RCURL> Lexeme } found
ScopeTable # 1
1 --> < main : ID >


Total lines: 26
Total errors: 0
